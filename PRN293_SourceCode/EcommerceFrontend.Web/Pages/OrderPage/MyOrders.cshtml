@page
@model EcommerceFrontend.Web.Pages.OrderPage.MyOrdersModel
@{
    ViewData["Title"] = "Đơn hàng của tôi";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>
                    <i class="fa fa-shopping-bag me-2"></i>Đơn hàng của tôi
                </h2>
                <a href="/OrderPage" class="btn btn-outline-primary">
                    <i class="fa fa-plus me-1"></i>Đặt hàng mới
                </a>
            </div>

            <!-- Orders List -->
            <div id="ordersContainer">
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Đang tải đơn hàng...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">
                    <i class="fa fa-list me-2"></i>Chi tiết đơn hàng
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                <!-- Order details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Load orders on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadOrders();
        });

        function loadOrders() {
            fetch('/api/Orders/user')
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        displayOrders(result.data);
                    } else {
                        showEmptyOrders();
                    }
                })
                .catch(error => {
                    console.error('Error loading orders:', error);
                    showEmptyOrders();
                });
        }

        function displayOrders(orders) {
            const container = document.getElementById('ordersContainer');
            
            if (!orders || orders.length === 0) {
                showEmptyOrders();
                return;
            }

            let html = '';
            orders.forEach(order => {
                html += `
                    <div class="card mb-3">
                        <div class="card-header">
                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <h6 class="mb-0">
                                        <i class="fa fa-shopping-bag"></i> Đơn hàng #${order.orderId}
                                    </h6>
                                </div>
                                <div class="col-md-6 text-end">
                                    <span class="badge bg-${getStatusBadgeColor(order.orderStatusId)}">
                                        ${getStatusText(order.orderStatusId)}
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3">
                                    <small class="text-muted">Ngày đặt:</small>
                                    <div>${formatDate(order.createdAt)}</div>
                                </div>
                                <div class="col-md-3">
                                    <small class="text-muted">Tổng tiền:</small>
                                    <div class="text-primary fw-bold">${formatCurrency(order.amountDue)}</div>
                                </div>
                                <div class="col-md-3">
                                    <small class="text-muted">Thanh toán:</small>
                                    <div>${order.paymentMethodName || 'N/A'}</div>
                                </div>
                                <div class="col-md-3 text-end">
                                    <button class="btn btn-outline-primary btn-sm" onclick="viewOrderDetails(${order.orderId})">
                                        <i class="fa fa-eye me-1"></i>Xem chi tiết
                                    </button>
                                </div>
                            </div>
                            ${order.orderNote ? `
                                <div class="mt-2">
                                    <small class="text-muted">Ghi chú:</small>
                                    <div>${order.orderNote}</div>
                                </div>
                            ` : ''}
                        </div>
                    </div>
                `;
            });
            
            container.innerHTML = html;
        }

        function showEmptyOrders() {
            const container = document.getElementById('ordersContainer');
            container.innerHTML = `
                <div class="text-center py-5">
                    <i class="fa fa-shopping-bag fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">Chưa có đơn hàng nào</h4>
                    <p class="text-muted">Bạn chưa có đơn hàng nào. Hãy mua sắm và tạo đơn hàng đầu tiên!</p>
                    <a href="/Products" class="btn btn-primary">
                        <i class="fa fa-shopping-cart me-1"></i>Mua sắm ngay
                    </a>
                </div>
            `;
        }

        function viewOrderDetails(orderId) {
            // Show loading in modal
            document.getElementById('orderDetailsContent').innerHTML = '<div class="text-center"><i class="fa fa-spinner fa-spin"></i> Đang tải...</div>';
            
            const modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
            modal.show();

            // Fetch order details
            fetch(`/api/Orders/${orderId}/details`)
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        displayOrderDetails(result.data);
                    } else {
                        document.getElementById('orderDetailsContent').innerHTML = 
                            '<div class="text-center text-danger">Không thể tải chi tiết đơn hàng</div>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching order details:', error);
                    document.getElementById('orderDetailsContent').innerHTML = 
                        '<div class="text-center text-danger">Lỗi khi tải chi tiết đơn hàng</div>';
                });
        }

        function displayOrderDetails(orderDetails) {
            let html = '<div class="table-responsive"><table class="table table-striped">';
            html += `
                <thead>
                    <tr>
                        <th>Sản phẩm</th>
                        <th class="text-center">Số lượng</th>
                        <th class="text-end">Đơn giá</th>
                        <th class="text-end">Thành tiền</th>
                    </tr>
                </thead>
                <tbody>
            `;

            orderDetails.forEach(item => {
                const total = (item.price || 0) * (item.quantity || 0);
                html += `
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="${item.productImage || '/images/default-product.jpg'}" 
                                     alt="${item.productName}" class="me-3" style="width: 50px; height: 50px; object-fit: cover;">
                                <div>
                                    <div class="fw-bold">${item.productName}</div>
                                    ${item.variantAttributes ? `<small class="text-muted">${item.variantAttributes}</small>` : ''}
                                </div>
                            </div>
                        </td>
                        <td class="text-center">${item.quantity}</td>
                        <td class="text-end">${formatCurrency(item.price)}</td>
                        <td class="text-end fw-bold">${formatCurrency(total)}</td>
                    </tr>
                `;
            });

            html += '</tbody></table></div>';
            document.getElementById('orderDetailsContent').innerHTML = html;
        }

        function getStatusBadgeColor(statusId) {
            return statusId switch {
                1 => 'warning',   // Pending
                2 => 'info',      // Processing
                3 => 'primary',   // Shipped
                4 => 'success',   // Delivered
                5 => 'danger',    // Cancelled
                _ => 'secondary'
            };
        }

        function getStatusText(statusId) {
            return statusId switch {
                1 => 'Chờ xử lý',
                2 => 'Đang xử lý',
                3 => 'Đang giao',
                4 => 'Đã giao',
                5 => 'Đã hủy',
                _ => 'Không xác định'
            };
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('vi-VN', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(amount);
        }
    </script>
} 