@page
@model EcommerceFrontend.Web.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products";
}

@section Styles {
    <style>
        /* Đảm bảo card sản phẩm có kích cỡ cố định */
        .product-card {
            min-height: 400px;
            max-height: 450px;
            transition: transform 0.2s ease-in-out;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            }

        .product-image-container {
            height: 200px;
            overflow: hidden;
            position: relative;
        }

        .product-image {
            height: 100%;
            width: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-card:hover .product-image {
            transform: scale(1.05);
        }

        .product-title {
            font-size: 1rem;
            line-height: 1.2;
            margin-bottom: 0.5rem;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .product-description {
            font-size: 0.875rem;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            line-height: 1.4;
            margin-bottom: 0.5rem;
        }

        .product-info {
            font-size: 0.8rem;
            margin-bottom: 0.5rem;
        }

        .product-price {
            font-size: 1.1rem;
            font-weight: bold;
            color: #007bff;
        }

        /* Responsive grid */
        @@media (max-width: 576px) {
            .row-cols-1 > * {
                flex: 0 0 100%;
                max-width: 100%;
            }
        }

        @@media (min-width: 576px) and (max-width: 768px) {
            .row-cols-md-2 > * {
                flex: 0 0 50%;
                max-width: 50%;
            }
        }

        @@media (min-width: 768px) and (max-width: 992px) {
            .row-cols-lg-3 > * {
                flex: 0 0 33.333333%;
                max-width: 33.333333%;
            }
        }

        @@media (min-width: 992px) {
            .row-cols-xl-4 > * {
                flex: 0 0 25%;
                max-width: 25%;
            }
        }
        
        /* Modal Styles */
        .modal-dialog-centered {
            display: flex;
            align-items: center;
            min-height: calc(100% - 1rem);
        }
        
        .product-modal-image-container {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 8px;
            margin: 10px;
        }
        
        .product-modal-image {
            transition: transform 0.3s ease;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .product-modal-image:hover {
            transform: scale(1.05);
        }
        
        .variant-select {
            transition: all 0.3s ease;
        }
        
        .variant-select:focus {
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            border-color: #007bff;
        }
        
        .variant-option {
            transition: all 0.3s ease;
        }
        
        .variant-option[style*="display: none"] {
            display: none !important;
            visibility: hidden !important;
            opacity: 0 !important;
            height: 0 !important;
            overflow: hidden !important;
            margin: 0 !important;
            padding: 0 !important;
        }
        
        .selected-price {
            border-left: 4px solid #28a745;
            transition: all 0.3s ease;
        }
        
        .selected-price:hover {
            background-color: #f8f9fa !important;
            transform: translateY(-2px);
        }
        
        .variant-details {
            border-left: 4px solid #17a2b8;
            transition: all 0.3s ease;
        }
        
        .modal-header {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            border-bottom: none;
        }
        
        .modal-footer {
            border-top: 1px solid #dee2e6;
        }
        
        /* Animation for modal */
        .modal.fade .modal-dialog {
            transition: transform 0.3s ease-out;
            transform: translate(0, -50px);
        }
        
        .modal.show .modal-dialog {
            transform: none;
        }
        
        /* Loading state for variant selects */
        .variant-select.loading {
            background-image: url('data:image/svg+xml;charset=UTF-8,%3csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"%3e%3cpath fill="%23ccc" d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50"%3e%3canimateTransform attributeName="transform" attributeType="XML" type="rotate" dur="1s" from="0 50 50" to="360 50 50" repeatCount="indefinite"/%3e%3c/path%3e%3c/svg%3e');
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            background-size: 16px 12px;
        }
        
        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .modal-dialog-centered {
                margin: 0.5rem;
            }
            
            .product-modal-image-container {
                margin: 5px;
            }
            
            .product-modal-image {
                max-height: 200px !important;
            }
        }
    </style>
}

<div class="container-fluid">

    <!-- Cart -->
    <div class="wrap-header-cart js-panel-cart">
        <div class="s-full js-hide-cart"></div>

        <div class="header-cart flex-col-l p-l-65 p-r-25">
            <div class="header-cart-title flex-w flex-sb-m p-b-8">
                <span class="mtext-103 cl2">
                    Your Cart
                </span>

                <div class="fs-35 lh-10 cl2 p-lr-5 pointer hov-cl1 trans-04 js-hide-cart">
                    <i class="zmdi zmdi-close"></i>
                </div>
            </div>

            <div class="header-cart-content flex-w js-pscroll">
                <ul class="header-cart-wrapitem w-full">
                    <li class="header-cart-item flex-w flex-t m-b-12">
                        <div class="header-cart-item-img">
                            <img src="images/item-cart-01.jpg" alt="IMG">
                        </div>

                        <div class="header-cart-item-txt p-t-8">
                            <a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
                                Áo thun trắng
                            </a>

                            <span class="header-cart-item-info">
                                1 x 19.00 VND
                            </span>
                        </div>
                    </li>

                    <li class="header-cart-item flex-w flex-t m-b-12">
                        <div class="header-cart-item-img">
                            <img src="images/item-cart-02.jpg" alt="IMG">
                        </div>

                        <div class="header-cart-item-txt p-t-8">
                            <a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
                                Giày Converse
                            </a>

                            <span class="header-cart-item-info">
                                1 x 29.00 VND
                            </span>
                        </div>
                    </li>

                    <li class="header-cart-item flex-w flex-t m-b-12">
                        <div class="header-cart-item-img">
                            <img src="images/item-cart-03.jpg" alt="IMG">
                        </div>

                        <div class="header-cart-item-txt p-t-8">
                            <a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
                                Đồng hồ
                            </a>

                            <span class="header-cart-item-info">
                                1 x 39.00 VND
                            </span>
                        </div>
                    </li>
                </ul>

                <div class="w-full">
                    <div class="header-cart-total w-full p-tb-40">
                        Tổng tiền: 77.00 VND
                    </div>

                    <div class="header-cart-buttons flex-w w-full">
                        <a href="shoping-cart.html" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-r-8 m-b-10">
                            Xem giỏ hàng
                        </a>

                        <a href="shoping-cart.html" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-b-10">
                            Thanh toán
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Section -->
    <section class="bg0 p-t-23 p-b-140">
        <div class="container">
            <div class="p-b-10">
                <h3 class="ltext-103 cl5">
                    Sản phẩm
                </h3>
            </div>

            <div class="flex-w flex-sb-m p-b-52">
                <div class="flex-w flex-l-m filter-tope-group m-tb-10">
                    <a asp-page="./Index" class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1" asp-route-category="">Tất cả sản phẩm</a>
                    @if (Model.Categories != null && Model.Categories.Any())
                    {
                        foreach (var cat in Model.Categories)
                        {
                            <a asp-page="./Index" asp-route-category="@cat.ProductCategoryTitle" class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5">
                                @cat.ProductCategoryTitle
                            </a>
                        }
                    }
                    else
                    {
                        <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".women">Nam</button>
                        <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".men">Nữ</button>
                        <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".bag">Túi</button>
                        <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".shoes">Giày</button>
                        <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".watches">Đồng hồ</button>
                    }
                    <form method="get" class="d-flex align-items-center ms-4">
                        <input type="hidden" name="category" value="@Model.SearchParams.Category" />
                        <input type="number" name="minPrice" class="form-control form-control-sm me-2" placeholder="Giá từ" value="@Model.SearchParams.MinPrice" style="width: 100px;" min="0" />
                        <input type="number" name="maxPrice" class="form-control form-control-sm me-2" placeholder="Đến" value="@Model.SearchParams.MaxPrice" style="width: 100px;" min="0" />
                        <button type="submit" class="btn btn-sm btn-primary">Lọc giá</button>
                    </form>
                </div>

                <div class="flex-w flex-c-m m-tb-10">
                    <div class="flex-c-m stext-106 cl6 size-104 bor4 pointer hov-btn3 trans-04 m-r-8 m-tb-4 js-show-filter">
                        <i class="icon-filter cl2 m-r-6 fs-15 trans-04 zmdi zmdi-filter-list"></i>
                        <i class="icon-close-filter cl2 m-r-6 fs-15 trans-04 zmdi zmdi-close dis-none"></i>
                        Lọc
                    </div>

                    <div class="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search">
                        <i class="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                        <i class="icon-close-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-close dis-none"></i>
                        Tìm kiếm
                    </div>
                </div>

                <!-- Search product -->
                <div class="dis-none panel-search w-full p-t-10 p-b-15">
                    <div class="bor8 dis-flex p-l-15">
                        <button class="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                            <i class="zmdi zmdi-search"></i>
                        </button>

                        <input class="mtext-107 cl2 size-114 plh2 p-r-15" type="text" name="search-product" placeholder="Search">
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="container mt-4">
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @Model.ErrorMessage
                    </div>
                }

                <!-- Search Form -->
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="get" class="row g-3">
                            <div class="col-md-4">
                                <label for="name" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="name" name="name" value="@Model.SearchParams.Name">
                            </div>
                            <div class="col-md-4">
                                <label for="category" class="form-label">Category</label>
                                <input type="text" class="form-control" id="category" name="category" value="@Model.SearchParams.Category">
                            </div>
                            <div class="col-md-2">
                                <label for="minPrice" class="form-label">Min Price</label>
                                <input type="number" class="form-control" id="minPrice" name="minPrice" value="@Model.SearchParams.MinPrice">
                            </div>
                            <div class="col-md-2">
                                <label for="maxPrice" class="form-label">Max Price</label>
                                <input type="number" class="form-control" id="maxPrice" name="maxPrice" value="@Model.SearchParams.MaxPrice">
                            </div>
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary">Search</button>
                                <a asp-page="./Index" class="btn btn-secondary">Clear</a>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Products Grid -->
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col">
                            <div class="card h-100 product-card">
                                <div class="product-image-container">
                                    <img src="@(product.Images.Any() ? product.GetFirstImageUrl(Model.ApiBaseUrl) : Url.Content("~/images/product-min-01.jpg"))" class="product-image" alt="@product.Name">
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title product-title">@product.Name</h5>
                                    <p class="card-text product-description flex-grow-1">@product.Description</p>
                                    <div class="mt-auto">
                                        <p class="card-text product-info mb-1">
                                            <small class="text-muted">Brand: @product.Brand</small><br>
                                            <small class="text-muted">Category: @product.CategoryName</small>
                                        </p>
                                        <p class="card-text product-price mb-2">
                                            $@product.BasePrice.ToString("N2")
                                        </p>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <div class="btn-group w-100">
                                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#variantModal-@product.ProductId">View Details</button>
                                        <a asp-page="./Edit" asp-route-id="@product.ProductId" class="btn btn-secondary btn-sm">Edit</a>
                                    </div>
                                </div>
                            </div>

                            <!-- Variant Selection Modal -->
                            <div class="modal fade" id="variantModal-@product.ProductId" tabindex="-1" aria-labelledby="variantModalLabel-@product.ProductId" aria-hidden="true">
                                <div class="modal-dialog modal-lg modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header bg-primary text-white">
                                            <h5 class="modal-title" id="variantModalLabel-@product.ProductId">
                                                <i class="fa fa-cube me-2"></i>@product.Name
                                            </h5>
                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body p-0">
                                            @if (product.Variants.Any())
                                            {
                                                var firstVariant = product.Variants.First();
                                                var attributes = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, List<string>>>(firstVariant.Attributes);
                                                var attributeNames = attributes?.Keys.ToList() ?? new List<string>();
                                                var variantData = product.Variants.Select(v => new
                                                {
                                                    VariantId = v.VariantId,
                                                    Attributes = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, List<string>>>(v.Attributes),
                                                    Variants = v.Variants
                                                }).ToList();

                                                <div class="row g-0">
                                                    <!-- Product Image Column -->
                                                    <div class="col-md-5">
                                                        <div class="product-modal-image-container p-4 text-center">
                                                            <img src="@(product.Images.Any() ? product.GetFirstImageUrl(Model.ApiBaseUrl) : Url.Content("~/images/product-min-01.jpg"))" 
                                                                 class="img-fluid rounded product-modal-image" 
                                                                 alt="@product.Name"
                                                                 style="max-height: 300px; object-fit: cover;">
                                                            <div class="mt-3">
                                                                <h6 class="text-muted">@product.Brand</h6>
                                                                <p class="text-muted small">@product.CategoryName</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <!-- Variant Selection Column -->
                                                    <div class="col-md-7">
                                                        <div class="p-4">
                                                            <h6 class="mb-3 text-primary">
                                                                <i class="fa fa-cogs me-2"></i>Chọn biến thể sản phẩm
                                                            </h6>
                                                            
                                                            <div class="variant-selection">
                                                                @for (int i = 0; i < attributeNames.Count; i++)
                                                                {
                                                                    var attrName = attributeNames[i];
                                                                    <div class="mb-3 variant-option"
                                                                         data-product-id="@product.ProductId"
                                                                         data-attribute="@attrName"
                                                                         style="display: @(i == 0 ? "block" : "none")">
                                                                        <label class="form-label fw-bold text-dark">@attrName:</label>
                                                                        <select class="form-select variant-select border-primary"
                                                                                data-product-id="@product.ProductId"
                                                                                data-attribute="@attrName"
                                                                                data-index="@i">
                                                                            <option value="">Chọn @attrName</option>
                                                                            @foreach (var value in attributes[attrName].Distinct())
                                                                            {
                                                                                <option value="@value">@value</option>
                                                                            }
                                                                        </select>
                                                                    </div>
                                                                }

                                                                <div class="selected-price mt-4 p-3 bg-light rounded" id="selected-price-@product.ProductId" data-base-price="@product.BasePrice.ToString("N2")">
                                                                    <h5 class="text-warning mb-0">
                                                                        <i class="fa fa-info-circle me-2"></i>Giá cơ bản: $@product.BasePrice.ToString("N2")
                                                                    </h5>
                                                                </div>

                                                                <div class="variant-details mt-3 p-3 bg-info bg-opacity-10 rounded" id="variant-details-@product.ProductId" style="display: none;">
                                                                    <h6 class="text-info mb-2">
                                                                        <i class="fa fa-info-circle me-2"></i>Thông tin biến thể
                                                                    </h6>
                                                                    <div class="supplier-info text-muted"></div>
                                                                    <div class="material-info text-muted"></div>
                                                                </div>

                                                                <script type="application/json" id="variant-data-@product.ProductId">
                                                                    @Html.Raw(System.Text.Json.JsonSerializer.Serialize(variantData, new System.Text.Json.JsonSerializerOptions
                                                                    {
                                                                        WriteIndented = false,
                                                                        PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase
                                                                    }))
                                                                </script>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="p-4 text-center">
                                                    <i class="fa fa-exclamation-triangle text-warning fa-3x mb-3"></i>
                                                    <h5 class="text-muted">Không có biến thể cho sản phẩm này</h5>
                                                    <p class="text-muted">Sản phẩm này không có các tùy chọn biến thể.</p>
                                                </div>
                                            }
                                        </div>
                                        <div class="modal-footer bg-light">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                <i class="fa fa-times me-2"></i>Đóng
                                            </button>
                                            <button type="button" class="btn btn-success add-to-cart-btn" 
                                                    data-product-id="@product.ProductId" 
                                                    data-product-name="@product.Name"
                                                    disabled>
                                                <i class="fa fa-shopping-cart me-2"></i>Thêm vào giỏ hàng
                                            </button>
                                            <a asp-page="./Details" asp-route-id="@product.ProductId" class="btn btn-primary">
                                                <i class="fa fa-eye me-2"></i>Xem chi tiết
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- PHÂN TRANG SẢN PHẨM -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                <a asp-page="./Index"
                                   asp-route-page="@(Model.CurrentPage - 1)"
                                   asp-route-name="@Model.SearchParams.Name"
                                   asp-route-category="@Model.SearchParams.Category"
                                   asp-route-minPrice="@Model.SearchParams.MinPrice"
                                   asp-route-maxPrice="@Model.SearchParams.MaxPrice"
                                   class="page-link" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a asp-page="./Index"
                                       asp-route-page="@i"
                                       asp-route-name="@Model.SearchParams.Name"
                                       asp-route-category="@Model.SearchParams.Category"
                                       asp-route-minPrice="@Model.SearchParams.MinPrice"
                                       asp-route-maxPrice="@Model.SearchParams.MaxPrice"
                                       class="page-link">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                <a asp-page="./Index"
                                   asp-route-page="@(Model.CurrentPage + 1)"
                                   asp-route-name="@Model.SearchParams.Name"
                                   asp-route-category="@Model.SearchParams.Category"
                                   asp-route-minPrice="@Model.SearchParams.MinPrice"
                                   asp-route-maxPrice="@Model.SearchParams.MaxPrice"
                                   class="page-link" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg3 p-t-75 p-b-32">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 col-lg-3 p-b-50">
                    <h4 class="stext-301 cl0 p-b-30">
                        Thể loại
                    </h4>

                    <ul>
                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Nữ
                            </a>
                        </li>

                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Nam
                            </a>
                        </li>

                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Giày
                            </a>
                        </li>

                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Đồng hồ
                            </a>
                        </li>
                    </ul>
                </div>

                <div class="col-sm-6 col-lg-3 p-b-50">
                    <h4 class="stext-301 cl0 p-b-30">
                        Trợ giúp
                    </h4>

                    <ul>
                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Đặt hàng
                            </a>
                        </li>

                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Phản hồi
                            </a>
                        </li>

                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Giao hàng
                            </a>
                        </li>

                        <li class="p-b-10">
                            <a href="#" class="stext-107 cl7 hov-cl1 trans-04">
                                Câu hỏi
                            </a>
                        </li>
                    </ul>
                </div>

                <div class="col-sm-6 col-lg-3 p-b-50">
                    <h4 class="stext-301 cl0 p-b-30">
                        Liên lạc
                    </h4>

                    <p class="stext-107 cl7 size-201">
                        Bạn có câu hỏi nào cho của hàng không? Nếu cần sự trợ giúp vui lòng liên hệ 0388888888
                    </p>

                    <div class="p-t-27">
                        <a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
                            <i class="fa fa-facebook"></i>
                        </a>

                        <a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
                            <i class="fa fa-instagram"></i>
                        </a>

                        <a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
                            <i class="fa fa-pinterest-p"></i>
                        </a>
                    </div>
                </div>

                <div class="col-sm-6 col-lg-3 p-b-50">
                    <h4 class="stext-301 cl0 p-b-30">
                        Bản tin
                    </h4>

                    <form>
                        <div class="wrap-input1 w-full p-b-4">
                            <input class="input1 bg-none plh1 stext-107 cl7" type="text" name="email" placeholder="email@example.com">
                            <div class="focus-input1 trans-04"></div>
                        </div>

                        <div class="p-t-18">
                            <button class="flex-c-m stext-101 cl0 size-103 bg1 bor1 hov-btn2 p-lr-15 trans-04">
                                Đặt mua
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="p-t-40">
                <div class="flex-c-m flex-w p-b-18">
                    <a href="#" class="m-all-1">
                        <img src="images/icons/icon-pay-01.png" alt="ICON-PAY">
                    </a>

                    <a href="#" class="m-all-1">
                        <img src="images/icons/icon-pay-02.png" alt="ICON-PAY">
                    </a>

                    <a href="#" class="m-all-1">
                        <img src="images/icons/icon-pay-03.png" alt="ICON-PAY">
                    </a>

                    <a href="#" class="m-all-1">
                        <img src="images/icons/icon-pay-04.png" alt="ICON-PAY">
                    </a>

                    <a href="#" class="m-all-1">
                        <img src="images/icons/icon-pay-05.png" alt="ICON-PAY">
                    </a>
                </div>
            </div>
        </div>
    </footer>

    <!-- Back to top -->
    <div class="btn-back-to-top" id="myBtn">
        <span class="symbol-btn-back-to-top">
            <i class="zmdi zmdi-chevron-up"></i>
        </span>
    </div>

    <!-- Modal1 -->
    <div class="wrap-modal1 js-modal1 p-t-60 p-b-20">
        <div class="overlay-modal1 js-hide-modal1"></div>

        <div class="container">
            <div class="bg0 p-t-60 p-b-30 p-lr-15-lg how-pos3-parent">
                <button class="how-pos3 hov3 trans-04 js-hide-modal1">
                    <img src="images/icons/icon-close.png" alt="CLOSE">
                </button>

                <div class="row">
                    <div class="col-md-6 col-lg-7 p-b-30">
                        <div class="p-l-25 p-r-30 p-lr-0-lg">
                            <div class="wrap-slick3 flex-sb flex-w">
                                <div class="wrap-slick3-dots"></div>
                                <div class="wrap-slick3-arrows flex-sb-m flex-w"></div>

                                <div class="slick3 gallery-lb">
                                    <div class="item-slick3" data-thumb="images/product-detail-01.jpg">
                                        <div class="wrap-pic-w pos-relative">
                                            <img src="images/product-detail-01.jpg" alt="IMG-PRODUCT">

                                            <a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="images/product-detail-01.jpg">
                                                <i class="fa fa-expand"></i>
                                            </a>
                                        </div>
                                    </div>

                                    <div class="item-slick3" data-thumb="images/product-detail-02.jpg">
                                        <div class="wrap-pic-w pos-relative">
                                            <img src="images/product-detail-02.jpg" alt="IMG-PRODUCT">

                                            <a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="images/product-detail-02.jpg">
                                                <i class="fa fa-expand"></i>
                                            </a>
                                        </div>
                                    </div>

                                    <div class="item-slick3" data-thumb="images/product-detail-03.jpg">
                                        <div class="wrap-pic-w pos-relative">
                                            <img src="images/product-detail-03.jpg" alt="IMG-PRODUCT">

                                            <a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="images/product-detail-03.jpg">
                                                <i class="fa fa-expand"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6 col-lg-5 p-b-30">
                        <div class="p-r-50 p-t-5 p-lr-0-lg">
                            <h4 class="mtext-105 cl2 js-name-detail p-b-14">
                                Áo khoác bò hàn quốc
                            </h4>

                            <span class="mtext-106 cl2">
                                58.79 VND
                            </span>

                            <p class="stext-102 cl3 p-t-23">
                                Sản phẩm thời trang hiện đại trẻ trung nam tính hàn quốc
                            </p>

                            <!--  -->
                            <div class="p-t-33">
                                <div class="flex-w flex-r-m p-b-10">
                                    <div class="size-203 flex-c-m respon6">
                                        Size
                                    </div>

                                    <div class="size-204 respon6-next">
                                        <div class="rs1-select2 bor8 bg0">
                                            <select class="js-select2" name="time">
                                                <option>Chọn size</option>
                                                <option> S</option>
                                                <option> M</option>
                                                <option> L</option>
                                                <option> XL</option>
                                            </select>
                                            <div class="dropDownSelect2"></div>
                                        </div>
                                    </div>
                                </div>

                                <div class="flex-w flex-r-m p-b-10">
                                    <div class="size-203 flex-c-m respon6">
                                        Màu sắc
                                    </div>

                                    <div class="size-204 respon6-next">
                                        <div class="rs1-select2 bor8 bg0">
                                            <select class="js-select2" name="time">
                                                <option>Chọn màu</option>
                                                <option>Xanh</option>
                                                <option>Đỏ</option>
                                                <option>Trắng</option>
                                                <option>Xám</option>
                                            </select>
                                            <div class="dropDownSelect2"></div>
                                        </div>
                                    </div>
                                </div>

                                <div class="flex-w flex-r-m p-b-10">
                                    <div class="size-204 flex-w flex-m respon6-next">
                                        <div class="wrap-num-product flex-w m-r-20 m-tb-10">
                                            <div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m">
                                                <i class="fs-16 zmdi zmdi-minus"></i>
                                            </div>

                                            <input class="mtext-104 cl3 txt-center num-product" type="number" name="num-product" value="1">

                                            <div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m">
                                                <i class="fs-16 zmdi zmdi-plus"></i>
                                            </div>
                                        </div>

                                        <button class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04 js-addcart-detail">
                                            Thêm vào giỏ hàng
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!--  -->
                            <div class="flex-w flex-m p-l-100 p-t-40 respon7">
                                <div class="flex-m bor9 p-r-10 m-r-11">
                                    <a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 js-addwish-detail tooltip100" data-tooltip="Add to Wishlist">
                                        <i class="zmdi zmdi-favorite"></i>
                                    </a>
                                </div>

                                <a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Facebook">
                                    <i class="fa fa-facebook"></i>
                                </a>

                                <a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Twitter">
                                    <i class="fa fa-twitter"></i>
                                </a>

                                <a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Google Plus">
                                    <i class="fa fa-google-plus"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--===============================================================================================-->
    <script src="vendor/jquery/jquery-3.2.1.min.js"></script>
    <!--===============================================================================================-->
    <script src="vendor/animsition/js/animsition.min.js"></script>
    <!--===============================================================================================-->
    <script src="vendor/bootstrap/js/popper.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.min.js"></script>
    <!--===============================================================================================-->
    <script src="vendor/select2/select2.min.js"></script>
    <script>
        $(".js-select2").each(function(){
            $(this).select2({
                minimumResultsForSearch: 20,
                dropdownParent: $(this).next('.dropDownSelect2')
            });
        })
    </script>
    <!--===============================================================================================-->
    <script src="vendor/daterangepicker/moment.min.js"></script>
    <script src="vendor/daterangepicker/daterangepicker.js"></script>
    <!--===============================================================================================-->
    <script src="vendor/slick/slick.min.js"></script>
    <script src="js/slick-custom.js"></script>
    <!--===============================================================================================-->
    <script src="vendor/parallax100/parallax100.js"></script>
    <script>
        $('.parallax100').parallax100();
    </script>
    <!--===============================================================================================-->
    <script src="vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
    <script>
        $('.gallery-lb').each(function() { // the containers for all your galleries
            $(this).magnificPopup({
                delegate: 'a', // the selector for gallery item
                type: 'image',
                gallery: {
                    enabled:true
                },
                mainClass: 'mfp-fade'
            });
        });
    </script>
    <!--===============================================================================================-->
    <script src="vendor/isotope/isotope.pkgd.min.js"></script>
    <!--===============================================================================================-->
    <script src="vendor/sweetalert/sweetalert.min.js"></script>
    <script>
        $('.js-addwish-b2, .js-addwish-detail').on('click', function(e){
            e.preventDefault();
        });

        $('.js-addwish-b2').each(function(){
            var nameProduct = $(this).parent().parent().find('.js-name-b2').html();
            $(this).on('click', function(){
                swal(nameProduct, "is added to wishlist !", "success");

                $(this).addClass('js-addedwish-b2');
                $(this).off('click');
            });
        });

        $('.js-addwish-detail').each(function(){
            var nameProduct = $(this).parent().parent().parent().find('.js-name-detail').html();

            $(this).on('click', function(){
                swal(nameProduct, "is added to wishlist !", "success");

                $(this).addClass('js-addedwish-detail');
                $(this).off('click');
            });
        });

        /*---------------------------------------------*/

        $('.js-addcart-detail').each(function(){
            var nameProduct = $(this).parent().parent().parent().parent().find('.js-name-detail').html();
            $(this).on('click', function(){
                swal(nameProduct, "is added to cart !", "success");
            });
        });
    </script>
    <!--===============================================================================================-->
    <script src="vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
    <script>
        $('.js-pscroll').each(function(){
            $(this).css('position','relative');
            $(this).css('overflow','hidden');
            var ps = new PerfectScrollbar(this, {
                wheelSpeed: 1,
                scrollingThreshold: 1000,
                wheelPropagation: false,
            });

            $(window).on('resize', function(){
                ps.update();
            })
        });
    </script>
    <!--===============================================================================================-->
    <script src="js/main.js"></script>

    <!-- Variant selection script -->
    <script>
            // Helper function to get cookie
            function getCookie(name) {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
                return null;
            }

            // Product variant handling
            document.addEventListener('DOMContentLoaded', function() {
                // Khởi tạo trạng thái ban đầu cho từng modal sản phẩm
                document.querySelectorAll('[id^="variantModal-"]').forEach(modal => {
                    const productId = modal.id.replace('variantModal-', '');
                    const options = modal.querySelectorAll('.variant-option[data-product-id="' + productId + '"]');
                    console.log('Initializing modal for product:', productId, 'with', options.length, 'options');
                    options.forEach((option, idx) => {
                        if (idx === 0) {
                            option.style.display = 'block';
                            option.style.visibility = 'visible';
                            option.style.opacity = '1';
                        } else {
                            option.style.display = 'none';
                            option.style.visibility = 'hidden';
                            option.style.opacity = '0';
                        }
                        console.log('Option', idx, 'display:', option.style.display);
                    });
                });
                
                // Add modal show animation and reset price display
                document.querySelectorAll('[id^="variantModal-"]').forEach(modal => {
                    modal.addEventListener('show.bs.modal', function () {
                        this.querySelector('.modal-dialog').style.transform = 'scale(0.8)';
                        setTimeout(() => {
                            this.querySelector('.modal-dialog').style.transform = 'scale(1)';
                        }, 50);
                        
                        // Reset price display to base price with warning color
                        const productId = this.id.replace('variantModal-', '');
                        const priceElement = document.getElementById(`selected-price-${productId}`);
                        const detailsElement = document.getElementById(`variant-details-${productId}`);
                        const basePrice = priceElement.dataset.basePrice;
                        
                        if (priceElement) {
                            priceElement.innerHTML = `<h5 class="text-warning mb-0"><i class="fa fa-info-circle me-2"></i>Giá cơ bản: $${basePrice}</h5>`;
                        }
                        
                        if (detailsElement) {
                            detailsElement.style.display = 'none';
                        }
                        
                        // Reset all selects
                        const allSelects = this.querySelectorAll('.variant-select');
                        allSelects.forEach(select => {
                            select.value = '';
                            Array.from(select.options).forEach(option => {
                                if (option.value !== '') option.disabled = false;
                            });
                        });
                        
                        // Hide all variant options except the first one
                        const allOptions = this.querySelectorAll('.variant-option');
                        allOptions.forEach((option, idx) => {
                            if (idx === 0) {
                                option.style.display = 'block';
                                option.style.visibility = 'visible';
                                option.style.opacity = '1';
                            } else {
                                option.style.display = 'none';
                                option.style.visibility = 'hidden';
                                option.style.opacity = '0';
                            }
                        });
                        
                        // Disable add to cart button
                        const addToCartBtn = this.querySelector('.add-to-cart-btn');
                        if (addToCartBtn) {
                            addToCartBtn.disabled = true;
                            addToCartBtn.classList.remove('btn-success');
                            addToCartBtn.classList.add('btn-secondary');
                        }
                    });
                });

                // Add event listeners for variant selects
                document.querySelectorAll('.variant-select').forEach(select => {
                    select.addEventListener('change', function() {
                        console.log('Variant select changed:', this.value);
                        
                        const productId = this.dataset.productId;
                        const currentIndex = parseInt(this.dataset.index);
                        const priceElement = document.getElementById(`selected-price-${productId}`);
                        const detailsElement = document.getElementById(`variant-details-${productId}`);
                        const basePrice = priceElement.dataset.basePrice;
                        
                        // Get variant data
                        const variantDataElement = document.getElementById(`variant-data-${productId}`);
                        if (!variantDataElement) {
                            console.error('Variant data element not found for product:', productId);
                            return;
                        }
                        
                        const variantData = JSON.parse(variantDataElement.textContent);
                        console.log('Variant data:', variantData);

                        // Get all variant options and selects for this product
                        const allOptions = document.querySelectorAll(`.variant-option[data-product-id="${productId}"]`);
                        const allSelects = document.querySelectorAll(`.variant-select[data-product-id="${productId}"]`);
                        
                        console.log('All options count:', allOptions.length);
                        console.log('Current index:', currentIndex);

                        // Reset and hide all options after current one
                        for (let i = currentIndex + 1; i < allOptions.length; i++) {
                            const select = allSelects[i];
                            select.value = '';
                            Array.from(select.options).forEach(option => {
                                if (option.value !== '') option.disabled = false;
                            });
                            allOptions[i].style.display = 'none';
                        }

                        // Show next attribute select if available and current value is selected
                        if (currentIndex < allOptions.length - 1 && this.value && this.value !== '') {
                            console.log('Showing next option at index:', currentIndex + 1);
                            const nextOption = allOptions[currentIndex + 1];
                            nextOption.style.display = 'block';
                            nextOption.style.visibility = 'visible';
                            nextOption.style.opacity = '1';
                            
                            const nextSelect = nextOption.querySelector('select');
                            const nextAttrName = nextSelect.dataset.attribute;
                            console.log('Next attribute name:', nextAttrName);

                            // Find available values for next dropdown based on selected attributes
                            const availableValues = new Set();
                            variantData.forEach(v => {
                                v.variants.forEach(variant => {
                                    let match = true;
                                    for (let j = 0; j <= currentIndex; j++) {
                                        const prevAttr = allSelects[j].dataset.attribute;
                                        const prevValue = allSelects[j].value;
                                        if (prevValue && variant[prevAttr] !== prevValue) {
                                            match = false;
                                            break;
                                        }
                                    }
                                    if (match && variant[nextAttrName]) {
                                        availableValues.add(variant[nextAttrName]);
                                    }
                                });
                            });
                            
                            console.log('Available values for next dropdown:', Array.from(availableValues));

                            // Enable/disable options in next dropdown
                            Array.from(nextSelect.options).forEach(option => {
                                if (option.value === '') return;
                                option.disabled = !availableValues.has(option.value);
                            });
                        } else {
                            console.log('Not showing next option. Current index:', currentIndex, 'Total options:', allOptions.length, 'Current value:', this.value);
                        }

                        // Collect all selected attributes
                        const selectedAttributes = {};
                        let allAttributesSelected = true;
                        for (let i = 0; i < allSelects.length; i++) {
                            const select = allSelects[i];
                            const attrName = select.dataset.attribute;
                            const value = select.value;
                            if (value && value !== '') {
                                selectedAttributes[attrName] = value;
                            } else {
                                allAttributesSelected = false;
                            }
                        }
                        
                        console.log('Selected attributes:', selectedAttributes);

                        // Update price display and add to cart button
                        const addToCartBtn = document.querySelector(`.add-to-cart-btn[data-product-id="${productId}"]`);
                        
                        if (!allAttributesSelected) {
                            // Hiển thị base price khi chưa chọn hết thuộc tính
                            priceElement.innerHTML = `<h5 class="text-warning mb-0"><i class="fa fa-info-circle me-2"></i>Giá cơ bản: $${basePrice}</h5>`;
                            detailsElement.style.display = 'none';
                            
                            // Disable add to cart button
                            if (addToCartBtn) {
                                addToCartBtn.disabled = true;
                                addToCartBtn.classList.remove('btn-success');
                                addToCartBtn.classList.add('btn-secondary');
                            }
                        } else {
                            // Hiển thị price của variant khi đã chọn hết thuộc tính
                            const matchingVariant = variantData.find(v => {
                                return v.variants.some(variant =>
                                    Object.entries(selectedAttributes).every(([key, value]) =>
                                        variant[key] === value
                                    )
                                );
                            });

                            if (matchingVariant) {
                                const matchingVariantInfo = matchingVariant.variants.find(variant =>
                                    Object.entries(selectedAttributes).every(([key, value]) =>
                                        variant[key] === value
                                    )
                                );

                                if (matchingVariantInfo) {
                                    const variantPrice = parseFloat(matchingVariantInfo.price).toFixed(2);
                                    priceElement.innerHTML = `<h5 class="text-success mb-0"><i class="fa fa-tag me-2"></i>Giá: $${variantPrice}</h5>`;

                                    if (matchingVariantInfo.supplier || matchingVariantInfo.material) {
                                        detailsElement.style.display = 'block';
                                        detailsElement.querySelector('.supplier-info').textContent =
                                            matchingVariantInfo.supplier ? `Nhà cung cấp: ${matchingVariantInfo.supplier}` : '';
                                        detailsElement.querySelector('.material-info').textContent =
                                            matchingVariantInfo.material ? `Chất liệu: ${matchingVariantInfo.material}` : '';
                                    } else {
                                        detailsElement.style.display = 'none';
                                    }
                                    
                                    // Enable add to cart button
                                    if (addToCartBtn) {
                                        addToCartBtn.disabled = false;
                                        addToCartBtn.classList.remove('btn-secondary');
                                        addToCartBtn.classList.add('btn-success');
                                    }
                                }
                            }
                        }
                    });
                });
                
                // Add event listeners for add to cart buttons
                document.querySelectorAll('.add-to-cart-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const productId = this.dataset.productId;
                        const productName = this.dataset.productName;
                        
                        // Get selected variant information
                        const modal = document.getElementById(`variantModal-${productId}`);
                        const allSelects = modal.querySelectorAll('.variant-select');
                        const selectedAttributes = {};
                        
                        allSelects.forEach(select => {
                            const attrName = select.dataset.attribute;
                            const value = select.value;
                            if (value && value !== '') {
                                selectedAttributes[attrName] = value;
                            }
                        });
                        
                        // Get variant price
                        const priceElement = document.getElementById(`selected-price-${productId}`);
                        const priceText = priceElement.textContent;
                        const priceMatch = priceText.match(/\$([\d,]+\.?\d*)/);
                        const price = priceMatch ? priceMatch[1] : '0';
                        
                        // Find variant ID based on selected attributes
                        let variantId = null;
                        const variantDataElement = document.getElementById(`variant-data-${productId}`);
                        if (variantDataElement) {
                            const variantData = JSON.parse(variantDataElement.textContent);
                            console.log('Variant data for product', productId, ':', variantData);
                            console.log('Selected attributes:', selectedAttributes);
                            
                            // Find the matching variant
                            for (let i = 0; i < variantData.length; i++) {
                                const variantGroup = variantData[i];
                                console.log('Processing variant group', i, ':', variantGroup);
                                let variants;
                                
                                try {
                                    // Check if variants is already an object or needs parsing
                                    if (typeof variantGroup.variants === 'string') {
                                        variants = JSON.parse(variantGroup.variants);
                                    } else {
                                        variants = variantGroup.variants;
                                    }
                                    console.log('Parsed variants:', variants);
                                } catch (parseError) {
                                    console.error('Error parsing variants:', parseError);
                                    console.log('Raw variants data:', variantGroup.variants);
                                    continue;
                                }
                                
                                if (!Array.isArray(variants)) {
                                    console.warn('Variants is not an array:', variants);
                                    continue;
                                }
                                
                                for (let j = 0; j < variants.length; j++) {
                                    const variant = variants[j];
                                    console.log('Checking variant', j, ':', variant);
                                    let isMatch = true;
                                    
                                    // Check if all selected attributes match this variant
                                    for (const [key, value] of Object.entries(selectedAttributes)) {
                                        console.log(`Comparing ${key}: selected="${value}" vs variant="${variant[key]}"`);
                                        if (variant[key] !== value) {
                                            isMatch = false;
                                            console.log(`Mismatch found: ${key} - selected: ${value}, variant: ${variant[key]}`);
                                            break;
                                        }
                                    }
                                    
                                    if (isMatch) {
                                        console.log('Found matching variant:', variant);
                                        // Use VariantId from variantGroup instead of variant.id
                                        if (variantGroup.variantId) {
                                            variantId = parseInt(variantGroup.variantId);
                                            console.log('Found matching variant ID:', variantId, 'for variant group:', variantGroup);
                                        } else {
                                            console.warn('Variant matched but variant group has no VariantId:', variantGroup);
                                        }
                                        break;
                                    }
                                }
                                
                                if (variantId !== null) break;
                            }
                        } else {
                            console.warn('Variant data element not found for product', productId);
                        }
                        
                        console.log('Final variant ID:', variantId);
                        
                        // Create cart item data
                        const cartItem = {
                            productId: parseInt(productId),
                            variantId: variantId,
                            variantAttributes: JSON.stringify(selectedAttributes),
                            quantity: 1
                        };
                        
                        console.log('Adding to cart:', cartItem);
                        
                        // Check if user is logged in
                        const userId = getCookie('UserId');
                        const endpoint = userId ? '/api/Cart/add' : '/api/Cart/add-guest';
                        
                        console.log('User ID:', userId, 'Using endpoint:', endpoint);
                        
                        // Send data to frontend API (which will proxy to backend)
                        fetch(endpoint, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'Accept': 'application/json'
                            },
                            body: JSON.stringify(cartItem)
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log('Success:', data);
                            
                            // Show success message
                            swal({
                                title: "Thành công!",
                                text: `${productName} đã được thêm vào giỏ hàng`,
                                icon: "success",
                                button: "OK",
                            });
                            
                            // Close modal after adding to cart
                            const modalInstance = bootstrap.Modal.getInstance(modal);
                            if (modalInstance) {
                                modalInstance.hide();
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            
                            // Show error message
                            swal({
                                title: "Lỗi!",
                                text: "Không thể thêm sản phẩm vào giỏ hàng. Vui lòng thử lại.",
                                icon: "error",
                                button: "OK",
                            });
                        });
                    });
                });
            });
        </script>
    </div>
}


