@page
@using System.Text.Json
@model EcommerceFrontend.Web.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products";
    var jsonOptions = new JsonSerializerOptions
    {
        PropertyNamingPolicy = JsonNamingPolicy.CamelCase
    };
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Products</h1>
        <div class="d-flex gap-2">
            <form method="get" class="d-flex gap-2">
                <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search products...">
                <select name="Category" class="form-select">
                    <option value="">All Categories</option>
                    <option value="Men Clothing" selected="@(Model.Category == "Men Clothing")">Men Clothing</option>
                    <option value="Women Clothing" selected="@(Model.Category == "Women Clothing")">Women Clothing</option>
                    <option value="Kids Clothing" selected="@(Model.Category == "Kids Clothing")">Kids Clothing</option>
                    <option value="Sportswear" selected="@(Model.Category == "Sportswear")">Sportswear</option>
                    <option value="Accessories" selected="@(Model.Category == "Accessories")">Accessories</option>
                </select>
                <button type="submit" class="btn btn-primary">Search</button>
            </form>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @Model.ErrorMessage
        </div>
    }

    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var product in Model.Products)
        {
            <div class="col">
                <div class="card h-100">
                    @if (product.ImageUrls.Any())
                    {
                        <img src="@product.ImageUrls.First()" class="card-img-top" alt="@product.ProductName" style="height: 200px; object-fit: cover;">
                    }
                    else
                    {
                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                            <span class="text-muted">No image available</span>
                        </div>
                    }
                    <div class="card-body">
                        <h5 class="card-title">@product.ProductName</h5>
                        <p class="card-text">@product.Description</p>
                        
                        @if (product.Variants.Any())
                        {
                            <div class="variants-section mb-3">
                                <h6 class="mb-2">Available Variants:</h6>
                                <div class="variant-options">
                                    <div class="sizes mb-2">
                                        <small class="text-muted">Sizes:</small>
                                        <div class="btn-group btn-group-sm" role="group">
                                            @foreach (var size in product.Variants.Select(v => v.Size).Distinct())
                                            {
                                                <input type="radio" class="btn-check" name="size_@product.ProductId" id="size_@(product.ProductId)_@size" autocomplete="off">
                                                <label class="btn btn-outline-secondary" for="size_@(product.ProductId)_@size">@size</label>
                                            }
                                        </div>
                                    </div>
                                    <div class="colors mb-2">
                                        <small class="text-muted">Colors:</small>
                                        <div class="btn-group btn-group-sm" role="group">
                                            @foreach (var color in product.Variants.Select(v => v.Color).Distinct())
                                            {
                                                <input type="radio" class="btn-check" name="color_@product.ProductId" id="color_@(product.ProductId)_@color" autocomplete="off">
                                                <label class="btn btn-outline-secondary" for="color_@(product.ProductId)_@color">@color</label>
                                            }
                                        </div>
                                    </div>
                                    <div class="price-range">
                                        <small class="text-muted">Price Range:</small>
                                        <span class="text-primary">
                                            $@product.Variants.Min(v => v.Price).ToString("N2") - $@product.Variants.Max(v => v.Price).ToString("N2")
                                        </span>
                                    </div>
                                    @{
                                        var variantsJson = JsonSerializer.Serialize(product.Variants, jsonOptions);
                                    }
                                    <input type="hidden" id="variants_@product.ProductId" value="@Html.Raw(variantsJson)" />
                                </div>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(product.ProductCategoryTitle))
                        {
                            <p class="card-text">
                                <small class="text-muted">Category: @product.ProductCategoryTitle</small>
                            </p>
                        }
                        
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <a href="/Products/Details/@product.ProductId" class="btn btn-primary">View Details</a>
                            @if (product.Status == 1)
                            {
                                <button class="btn btn-success add-to-cart" data-product-id="@product.ProductId" disabled>
                                    Add to Cart
                                </button>
                            }
                            else
                            {
                                <span class="badge bg-danger">Out of Stock</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Model.Products.Any())
    {
        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.PageNumber > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?PageNumber=@(Model.PageNumber - 1)&SearchTerm=@Model.SearchTerm&Category=@Model.Category">Previous</a>
                        </li>
                    }
                    <li class="page-item">
                        <span class="page-link">Page @Model.PageNumber</span>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="?PageNumber=@(Model.PageNumber + 1)&SearchTerm=@Model.SearchTerm&Category=@Model.Category">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle variant selection
            $('.btn-check').change(function() {
                const productId = $(this).attr('name').split('_')[1];
                const selectedSize = $(`input[name="size_${productId}"]:checked`).next('label').text();
                const selectedColor = $(`input[name="color_${productId}"]:checked`).next('label').text();
                
                if (selectedSize && selectedColor) {
                    // Enable add to cart button and update price
                    const variants = JSON.parse($(`#variants_${productId}`).val());
                    const selectedVariant = variants.find(v => v.size === selectedSize && v.color === selectedColor);
                    if (selectedVariant) {
                        $(`#price_${productId}`).text(`$${selectedVariant.price.toFixed(2)}`);
                        $(`button[data-product-id="${productId}"]`)
                            .prop('disabled', false)
                            .attr('data-variant-id', selectedVariant.variantId);
                    }
                }
            });

            // Handle add to cart
            $('.add-to-cart').click(function() {
                const productId = $(this).data('product-id');
                const variantId = $(this).data('variant-id');
                
                if (!variantId) {
                    alert('Please select size and color first');
                    return;
                }

                // Add to cart logic here
                console.log('Adding to cart:', { productId, variantId });
            });
        });
    </script>
}