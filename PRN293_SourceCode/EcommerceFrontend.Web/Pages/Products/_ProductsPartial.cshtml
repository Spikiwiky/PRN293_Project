@model EcommerceFrontend.Web.Pages.Products.IndexModel

<!-- Products Info -->
<div class="products-info d-flex justify-content-between align-items-center mb-3" id="productsInfo">
    <div class="text-muted">
        Hiển thị @Model.Products.Count sản phẩm trên trang @Model.CurrentPage / @Model.TotalPages
        @if (Model.TotalPages > 0)
        {
            <span>(Tổng cộng @((Model.TotalPages - 1) * Model.PageSize + Model.Products.Count) sản phẩm)</span>
        }
    </div>
    <div class="text-muted">
        @Model.PageSize sản phẩm mỗi trang
    </div>
</div>

<!-- Products Grid -->
<div id="productsContainer">
    @if (!Model.Products.Any())
    {
        <div class="text-center py-5">
            <div class="alert alert-info" role="alert">
                <h4 class="alert-heading">Không tìm thấy sản phẩm!</h4>
                <p>Không có sản phẩm nào phù hợp với tiêu chí tìm kiếm của bạn.</p>
                <hr>
                <p class="mb-0">
                    <button type="button" class="btn btn-primary" onclick="loadAllProducts()">Xem tất cả sản phẩm</button>
                </p>
            </div>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
            @foreach (var product in Model.Products)
            {
                <div class="col">
                    <div class="card h-100 product-card">
                        <div class="product-image-container">
                            <img src="@(product.Images.Any() ? product.GetFirstImageUrl(Model.ApiBaseUrl) : Url.Content("~/images/product-min-01.jpg"))" class="product-image" alt="@product.Name">
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-title">@product.Name</h5>
                            <p class="card-text product-description flex-grow-1">@product.Description</p>
                            <div class="mt-auto">
                                <p class="card-text product-info mb-1">
                                    <small class="text-muted">Brand: @product.Brand</small><br>
                                    <small class="text-muted">Category: @product.CategoryName</small>
                                </p>
                                <p class="card-text product-price mb-2">
                                    $@product.BasePrice.ToString("N2")
                                </p>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <div class="d-flex justify-content-between align-items-center">
                                <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#productModal-@product.ProductId">
                                    <i class="fas fa-eye"></i> View Details
                                </button>
                                <button class="btn btn-primary btn-sm">
                                    <i class="fas fa-shopping-cart"></i> Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Product Modal -->
                    <div class="modal fade" id="productModal-@product.ProductId" tabindex="-1" aria-labelledby="productModalLabel-@product.ProductId" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="productModalLabel-@product.ProductId">@product.Name</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <img src="@(product.Images.Any() ? product.GetFirstImageUrl(Model.ApiBaseUrl) : Url.Content("~/images/product-min-01.jpg"))" class="img-fluid" alt="@product.Name">
                                        </div>
                                        <div class="col-md-8">
                                            @if (product.Variants.Any())
                                            {
                                                var firstVariant = product.Variants.First();
                                                var attributes = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, List<string>>>(firstVariant.Attributes);
                                                var attributeNames = attributes?.Keys.ToList() ?? new List<string>();
                                                var variantData = product.Variants.Select(v => new
                                                {
                                                    Attributes = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, List<string>>>(v.Attributes),
                                                    Variants = v.Variants
                                                }).ToList();

                                                <div class="variant-selection">
                                                    @for (int i = 0; i < attributeNames.Count; i++)
                                                    {
                                                        var attrName = attributeNames[i];
                                                        <div class="mb-2 variant-option"
                                                             data-product-id="@product.ProductId"
                                                             data-attribute="@attrName"
                                                             style="display: @(i == 0 ? "block" : "none")">
                                                            <label class="form-label">@attrName:</label>
                                                            <select class="form-select variant-select"
                                                                    data-product-id="@product.ProductId"
                                                                    data-attribute="@attrName"
                                                                    data-index="@i">
                                                                <option value="">Select @attrName</option>
                                                                @foreach (var value in attributes[attrName].Distinct())
                                                                {
                                                                    <option value="@value">@value</option>
                                                                }
                                                            </select>
                                                        </div>
                                                    }

                                                    <div class="selected-price mt-3" id="selected-price-@product.ProductId" data-base-price="@product.BasePrice.ToString("N2")">
                                                        <strong>Base Price: $@product.BasePrice.ToString("N2")</strong>
                                                    </div>

                                                    <div class="variant-details mt-2" id="variant-details-@product.ProductId" style="display: none;">
                                                        <small class="text-muted">
                                                            <span class="supplier-info"></span><br>
                                                            <span class="material-info"></span>
                                                        </small>
                                                    </div>

                                                    <script type="application/json" id="variant-data-@product.ProductId">
                                                        @Html.Raw(System.Text.Json.JsonSerializer.Serialize(variantData, new System.Text.Json.JsonSerializerOptions
                                                        {
                                                                WriteIndented = false,
                                                                PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase
                                                        }))
                                                    </script>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    <a asp-page="./Details" asp-route-id="@product.ProductId" class="btn btn-primary">Go to Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- PHÂN TRANG SẢN PHẨM -->
<div id="paginationContainer">
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- Previous Page -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <button type="button" class="page-link" onclick="loadPage(@(Model.CurrentPage - 1))" @(Model.CurrentPage == 1 ? "disabled" : "")>
                        <span aria-hidden="true">&laquo;</span>
                    </button>
                </li>

                <!-- First Page -->
                @if (Model.CurrentPage > 3)
                {
                    <li class="page-item">
                        <button type="button" class="page-link" onclick="loadPage(1)">1</button>
                    </li>
                    @if (Model.CurrentPage > 4)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                <!-- Page Numbers -->
                @{
                    var startPage = Math.Max(1, Model.CurrentPage - 2);
                    var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                }
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <button type="button" class="page-link @(i == Model.CurrentPage ? "active" : "")" onclick="loadPage(@i)">@i</button>
                    </li>
                }

                <!-- Last Page -->
                @if (Model.CurrentPage < Model.TotalPages - 2)
                {
                    @if (Model.CurrentPage < Model.TotalPages - 3)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    <li class="page-item">
                        <button type="button" class="page-link" onclick="loadPage(@Model.TotalPages)">@Model.TotalPages</button>
                    </li>
                }

                <!-- Next Page -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <button type="button" class="page-link" onclick="loadPage(@(Model.CurrentPage + 1))" @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")>
                        <span aria-hidden="true">&raquo;</span>
                    </button>
                </li>
            </ul>
        </nav>
    }
</div> 