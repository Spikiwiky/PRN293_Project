@page
@model EcommerceFrontend.Web.Pages.CommonPage.HomepageModel
@{
    Layout = "_Layout";
}

<style>
/* Đảm bảo slick slider full chiều cao và full width */
.wrap-slick1, .slick1, .item-slick1 {
    width: 100vw;
    min-width: 100vw;
    max-width: 100vw;
    left: 0;
    margin: 0;
    position: relative;
}
.wrap-slick1 {
    margin-top: 100px;
}
.item-slick1 {
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    background-color: #fff;
    height: 600px;
}
.slick1 .h-full {
    height: 100%;
}
.flex-col-l-m.h-full {
    height: 100%;
    justify-content: center;
    display: flex;
    flex-direction: column;
}
/* Card sản phẩm đều đẹp */
.card.h-100 {
    display: flex;
    flex-direction: column;
    height: 100%;
}
.card-body {
    flex: 1 1 auto;
}
.card-img-top {
    height: 200px;
    object-fit: cover;
    width: 100%;
    background: #f8f8f8;
}
.card-footer {
    background: none;
    border-top: none;
}
.row.row-cols-md-4 {
    align-items: stretch;
}
</style>

<!-- ĐẢM BẢO IMPORT SLICK CSS ĐÚNG VÀ ĐẦU TIÊN -->
<link rel="stylesheet" type="text/css" href="~/vendor/slick/slick.css" />
<link rel="stylesheet" type="text/css" href="~/vendor/slick/slick-theme.css" />

<!-- ===== HEADER, SLIDER, BANNER từ trang home gốc ===== -->
<header class="header-v2">
    <!-- Header desktop -->
    <div class="container-menu-desktop trans-03">
        <div class="wrap-menu-desktop">
            <nav class="limiter-menu-desktop p-l-45">
                <!-- Logo desktop -->
                <a href="#" class="logo">
                    <img src="~/images/icons/logo-01.png" alt="IMG-LOGO">
                </a>
                <!-- Menu desktop -->
                <div class="menu-desktop">
                    <ul class="main-menu">
                        <li class="active-menu">
                            <a href="index.html">Home</a>
                            <ul class="sub-menu">
                                <li><a href="index.html">Homepage 1</a></li>
                                <li><a href="home-02.html">Homepage 2</a></li>
                                <li><a href="home-03.html">Homepage 3</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="product.html">Shop</a>
                        </li>
                        <li class="label1" data-label1="hot">
                            <a href="shoping-cart.html">Features</a>
                        </li>
                        <li>
                            <a href="blog.html">Blog</a>
                        </li>
                        <li>
                            <a href="about.html">About</a>
                        </li>
                        <li>
                            <a href="contact.html">Contact</a>
                        </li>
                    </ul>
                </div>
                <!-- Icon header -->
                <div class="wrap-icon-header flex-w flex-r-m h-full">
                    <div class="flex-c-m h-full p-r-24">
                        <div class="icon-header-item cl2 hov-cl1 trans-04 p-lr-11 js-show-modal-search">
                            <i class="zmdi zmdi-search"></i>
                        </div>
                    </div>
                    <div class="flex-c-m h-full p-l-18 p-r-25 bor5">
                        <div class="icon-header-item cl2 hov-cl1 trans-04 p-lr-11 icon-header-noti js-show-cart" data-notify="2">
                            <i class="zmdi zmdi-shopping-cart"></i>
                        </div>
                    </div>
                    <div class="flex-c-m h-full p-lr-19">
                        <div class="icon-header-item cl2 hov-cl1 trans-04 p-lr-11 js-show-sidebar">
                            <i class="zmdi zmdi-menu"></i>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
    </div>
    <!-- Header Mobile -->
    <div class="wrap-header-mobile">
        <div class="logo-mobile">
            <a href="index.html"><img src="~/images/icons/logo-01.png" alt="IMG-LOGO"></a>
        </div>
        <div class="wrap-icon-header flex-w flex-r-m h-full m-r-15">
            <div class="flex-c-m h-full p-r-10">
                <div class="icon-header-item cl2 hov-cl1 trans-04 p-lr-11 js-show-modal-search">
                    <i class="zmdi zmdi-search"></i>
                </div>
            </div>
            <div class="flex-c-m h-full p-lr-10 bor5">
                <div class="icon-header-item cl2 hov-cl1 trans-04 p-lr-11 icon-header-noti js-show-cart" data-notify="2">
                    <i class="zmdi zmdi-shopping-cart"></i>
                </div>
            </div>
        </div>
        <div class="btn-show-menu-mobile hamburger hamburger--squeeze">
            <span class="hamburger-box">
                <span class="hamburger-inner"></span>
            </span>
        </div>
    </div>
    <div class="menu-mobile">
        <ul class="main-menu-m">
            <li>
                <a href="index.html">Home</a>
                <ul class="sub-menu-m">
                    <li><a href="index.html">Homepage 1</a></li>
                    <li><a href="home-02.html">Homepage 2</a></li>
                    <li><a href="home-03.html">Homepage 3</a></li>
                </ul>
                <span class="arrow-main-menu-m">
                    <i class="fa fa-angle-right" aria-hidden="true"></i>
                </span>
            </li>
            <li>
                <a href="product.html">Shop</a>
            </li>
            <li>
                <a href="shoping-cart.html" class="label1 rs1" data-label1="hot">Features</a>
            </li>
            <li>
                <a href="blog.html">Blog</a>
            </li>
            <li>
                <a href="about.html">About</a>
            </li>
            <li>
                <a href="contact.html">Contact</a>
            </li>
        </ul>
    </div>
    <div class="modal-search-header flex-c-m trans-04 js-hide-modal-search">
        <div class="container-search-header">
            <button class="flex-c-m btn-hide-modal-search trans-04 js-hide-modal-search">
                <img src="~/images/icons/icon-close2.png" alt="CLOSE">
            </button>
            <form class="wrap-search-header flex-w p-l-15">
                <button class="flex-c-m trans-04">
                    <i class="zmdi zmdi-search"></i>
                </button>
                <input class="plh3" type="text" name="search" placeholder="Search...">
            </form>
        </div>
    </div>
</header>

<!-- SLIDER ẢNH LỚN -->
<div class="wrap-slick1">
    <div class="slick1">
        <div class="item-slick1" style="background-image: url('@Url.Content("~/images/banner-04.jpg")');">
            <div class="h-full">
                <div class="flex-col-l-m h-full p-t-100 p-b-30 respon5">
                    <span class="ltext-101 cl2 respon2">
                        Bộ sưu tập nam
                    </span>
                    <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1">
                        THẾ GIỚI THỜI TRANG
                    </h2>
                    <a href="/Products" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                        MUA NGAY
                    </a>
                </div>
            </div>
        </div>
        <div class="item-slick1" style="background-image: url('@Url.Content("~/images/banner-05.jpg")');">
            <div class="h-full">
                <div class="flex-col-l-m h-full p-t-100 p-b-30 respon5">
                    <span class="ltext-101 cl2 respon2">
                        Bộ sưu tập nữ
                    </span>
                    <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1">
                        PHONG CÁCH HIỆN ĐẠI
                    </h2>
                    <a href="/Products" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                        MUA NGAY
                    </a>
                </div>
            </div>
        </div>
        <div class="item-slick1" style="background-image: url('@Url.Content("~/images/banner-06.jpg")');">
            <div class="h-full">
                <div class="flex-col-l-m h-full p-t-100 p-b-30 respon5">
                    <span class="ltext-101 cl2 respon2">
                        Bộ sưu tập phụ kiện
                    </span>
                    <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1">
                        ĐẲNG CẤP & SANG TRỌNG
                    </h2>
                    <a href="/Products" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                        MUA NGAY
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Banner nhỏ dưới slider -->
<div class="sec-banner bg0">
    <div class="flex-w flex-c-m">
        <div class="size-202 m-lr-auto respon4">
            <div class="block1 wrap-pic-w">
                <img src="~/images/banner-04.jpg" alt="IMG-BANNER">
                <a href="/Products?category=Women" class="block1-txt ab-t-l s-full flex-col-l-sb p-lr-38 p-tb-34 trans-03 respon3">
                    <div class="block1-txt-child1 flex-col-l">
                        <span class="block1-name ltext-102 trans-04 p-b-8">Women</span>
                        <span class="block1-info stext-102 trans-04">Spring 2024</span>
                    </div>
                    <div class="block1-txt-child2 p-b-4 trans-05">
                        <div class="block1-link stext-101 cl0 trans-09">Shop Now</div>
                    </div>
                </a>
            </div>
        </div>
        <div class="size-202 m-lr-auto respon4">
            <div class="block1 wrap-pic-w">
                <img src="~/images/banner-05.jpg" alt="IMG-BANNER">
                <a href="/Products?category=Men" class="block1-txt ab-t-l s-full flex-col-l-sb p-lr-38 p-tb-34 trans-03 respon3">
                    <div class="block1-txt-child1 flex-col-l">
                        <span class="block1-name ltext-102 trans-04 p-b-8">Men</span>
                        <span class="block1-info stext-102 trans-04">Spring 2024</span>
                    </div>
                    <div class="block1-txt-child2 p-b-4 trans-05">
                        <div class="block1-link stext-101 cl0 trans-09">Shop Now</div>
                    </div>
                </a>
            </div>
        </div>
        <div class="size-202 m-lr-auto respon4">
            <div class="block1 wrap-pic-w">
                <img src="~/images/banner-06.jpg" alt="IMG-BANNER">
                <a href="/Products?category=Bags" class="block1-txt ab-t-l s-full flex-col-l-sb p-lr-38 p-tb-34 trans-03 respon3">
                    <div class="block1-txt-child1 flex-col-l">
                        <span class="block1-name ltext-102 trans-04 p-b-8">Bags</span>
                        <span class="block1-info stext-102 trans-04">New Trend</span>
                    </div>
                    <div class="block1-txt-child2 p-b-4 trans-05">
                        <div class="block1-link stext-101 cl0 trans-09">Shop Now</div>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>

<!-- ===== PHẦN SẢN PHẨM từ Products/Index.cshtml ===== -->
<section class="bg0 p-t-23 p-b-140">
    <div class="container">
        <div class="p-b-10">
            <h3 class="ltext-103 cl5">
                Sản phẩm
            </h3>
        </div>
        <div class="flex-w flex-sb-m p-b-52">
            <div class="flex-w flex-l-m filter-tope-group m-tb-10">
                <a asp-page="/CommonPage/Homepage" class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1" asp-route-category="">Tất cả sản phẩm</a>
                @if (Model.Categories != null && Model.Categories.Any())
                {
                    foreach (var cat in Model.Categories)
                    {
                        <a asp-page="/CommonPage/Homepage" asp-route-category="@cat.ProductCategoryTitle" class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5">
                            @cat.ProductCategoryTitle
                        </a>
                    }
                }
                <form method="get" class="d-flex align-items-center ms-4">
                    <input type="hidden" name="category" value="@Model.SearchParams.Category" />
                    <input type="number" name="minPrice" class="form-control form-control-sm me-2" placeholder="Giá từ" value="@Model.SearchParams.MinPrice" style="width: 100px;" min="0" />
                    <input type="number" name="maxPrice" class="form-control form-control-sm me-2" placeholder="Đến" value="@Model.SearchParams.MaxPrice" style="width: 100px;" min="0" />
                    <button type="submit" class="btn btn-sm btn-primary">Lọc giá</button>
                </form>
            </div>
        </div>
        <div class="container mt-4">
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @Model.ErrorMessage
                </div>
            }
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" class="row g-3 align-items-end">
                        <div class="col-md-4">
                            <label for="name" class="form-label">Product Name</label>
                            <input type="text" class="form-control" id="name" name="name" value="@Model.SearchParams.Name">
                        </div>
                        <div class="col-md-4">
                            <label for="category" class="form-label">Category</label>
                            <input type="text" class="form-control" id="category" name="category" value="@Model.SearchParams.Category">
                        </div>
                        <div class="col-md-2">
                            <label for="minPrice" class="form-label">Min Price</label>
                            <input type="number" class="form-control" id="minPrice" name="minPrice" value="@Model.SearchParams.MinPrice">
                        </div>
                        <div class="col-md-2">
                            <label for="maxPrice" class="form-label">Max Price</label>
                            <input type="number" class="form-control" id="maxPrice" name="maxPrice" value="@Model.SearchParams.MaxPrice">
                        </div>
                        <div class="col-md-2">
                            <label for="pageSize" class="form-label">Page Size</label>
                            <select class="form-select" id="pageSize" name="pageSize" onchange="this.form.submit()">
                                @foreach (var size in new int[] { 8, 12, 16, 20, 32, 50, 100 })
                                {
                                    if (Model.PageSize == size)
                                    {
                                        <option value="@size" selected>@size</option>
                                    }
                                    else
                                    {
                                        <option value="@size">@size</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary">Search</button>
                            <a asp-page="/CommonPage/Homepage" class="btn btn-secondary">Clear</a>
                        </div>
                    </form>
                </div>
            </div>
            @{
                int productsCount = Model.Products.Count;
                int cols = 4;
                int remainder = productsCount % cols;
                int emptyCols = remainder == 0 ? 0 : cols - remainder;
            }
            <div class="row row-cols-1 row-cols-md-4 g-4">
                @foreach (var product in Model.Products)
                {
                    <div class="col h-100">
                        <div class="card h-100">
                            <img src="@(product.Images.Any() ? product.Images.First() : Url.Content("~/images/product-min-01.jpg"))" class="card-img-top" alt="@product.Name">
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text">@product.Description</p>
                                <p class="card-text">
                                    <small class="text-muted">Brand: @product.Brand</small><br>
                                    <small class="text-muted">Category: @product.CategoryName</small>
                                </p>
                                <p class="card-text" id="selected-price-card-@product.ProductId" data-base-price="@product.BasePrice">
                                    <strong>Base Price: $@product.BasePrice.ToString("N2")</strong>
                                </p>
                                <div id="variant-details-@product.ProductId" style="display:none;">
                                    <span class="supplier-info"></span><br />
                                    <span class="material-info"></span>
                                </div>
                            </div>
                            <div class="card-footer">
                                <div class="btn-group w-100">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#variantModal-@product.ProductId">View Details</button>
                                </div>
                            </div>
                        </div>
                        <!-- Variant Selection Modal -->
                        <div class="modal fade" id="variantModal-@product.ProductId" tabindex="-1" aria-labelledby="variantModalLabel-@product.ProductId" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="variantModalLabel-@product.ProductId">@product.Name - Select Variants</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        @if (product.Variants.Any())
                                        {
                                            var firstVariant = product.Variants.First();
                                            var attributes = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, List<string>>>(firstVariant.Attributes);
                                            var attributeNames = attributes?.Keys.ToList() ?? new List<string>();
                                            var variantData = product.Variants.Select(v => new
                                            {
                                                Attributes = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, List<string>>>(v.Attributes),
                                                Variants = v.Variants
                                            }).ToList();
                                            <div class="variant-selection">
                                                @for (int i = 0; i < attributeNames.Count; i++)
                                                {
                                                    var attrName = attributeNames[i];
                                                    <div class="mb-2 variant-option"
                                                         data-product-id="@product.ProductId"
                                                         data-attribute="@attrName"
                                                         style="display: @(i == 0 ? "block" : "none")">
                                                        <label class="form-label">@attrName:</label>
                                                        <select class="form-select variant-select"
                                                                data-product-id="@product.ProductId"
                                                                data-attribute="@attrName"
                                                                data-index="@i">
                                                            <option value="">Select @attrName</option>
                                                            @foreach (var value in attributes[attrName].Distinct())
                                                            {
                                                                <option value="@value">@value</option>
                                                            }
                                                        </select>
                                                    </div>
                                                }
                                                <div class="selected-price mt-3" id="selected-price-@product.ProductId" data-base-price="@product.BasePrice.ToString("N2")">
                                                    <strong>Base Price: $@product.BasePrice.ToString("N2")</strong>
                                                </div>
                                                <div class="variant-details mt-2" id="variant-details-@product.ProductId" style="display: none;">
                                                    <small class="text-muted">
                                                        <span class="supplier-info"></span><br>
                                                        <span class="material-info"></span>
                                                    </small>
                                                </div>
                                                <script type="application/json" id="variant-data-@product.ProductId">
                                                    @Html.Raw(System.Text.Json.JsonSerializer.Serialize(variantData, new System.Text.Json.JsonSerializerOptions
                                                    {
                                                        WriteIndented = false,
                                                        PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase
                                                    }))
                                                </script>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @for (int i = 0; i < emptyCols; i++)
                {
                    <div class="col h-100 invisible"></div>
                }
            </div>
            <!-- Phân trang nếu có -->
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @if (Model.PageIndex > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-page="/CommonPage/Homepage" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-category="@Model.SearchParams.Category" asp-route-name="@Model.SearchParams.Name" asp-route-minPrice="@Model.SearchParams.MinPrice" asp-route-maxPrice="@Model.SearchParams.MaxPrice">Previous</a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" asp-page="/CommonPage/Homepage" asp-route-pageIndex="@i" asp-route-category="@Model.SearchParams.Category" asp-route-name="@Model.SearchParams.Name" asp-route-minPrice="@Model.SearchParams.MinPrice" asp-route-maxPrice="@Model.SearchParams.MaxPrice">@i</a>
                        </li>
                    }
                    @if (Model.PageIndex < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-page="/CommonPage/Homepage" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-category="@Model.SearchParams.Category" asp-route-name="@Model.SearchParams.Name" asp-route-minPrice="@Model.SearchParams.MinPrice" asp-route-maxPrice="@Model.SearchParams.MaxPrice">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</section>

@section Scripts {
    <script src="~/vendor/slick/slick.min.js"></script>
    <script>
        $(document).ready(function(){
            $('.slick1').slick({
                slidesToShow: 1,
                slidesToScroll: 1,
                fade: true,
                dots: true,
                arrows: true,
                autoplay: true,
                autoplaySpeed: 4000
            });
        });
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.variant-select').forEach(select => {
                select.addEventListener('change', function() {
                    const productId = this.dataset.productId;
                    const currentIndex = parseInt(this.dataset.index);
                    const priceElement = document.getElementById(`selected-price-${productId}`);
                    const cardPriceElement = document.getElementById(`selected-price-card-${productId}`);
                    const detailsElement = document.getElementById(`variant-details-${productId}`);
                    const basePrice = priceElement.dataset.basePrice;
                    const variantData = JSON.parse(document.getElementById(`variant-data-${productId}`).textContent);

                    // Get all variant options and selects for this product
                    const allOptions = document.querySelectorAll(`.variant-option[data-product-id="${productId}"]`);
                    const allSelects = document.querySelectorAll(`.variant-select[data-product-id="${productId}"]`);

                    // Collect all selected attributes
                    const selectedAttributes = {};
                    let allAttributesSelected = true;
                    for (let i = 0; i < allSelects.length; i++) {
                        const select = allSelects[i];
                        const attrName = select.dataset.attribute;
                        const value = select.value;
                        if (value) {
                            selectedAttributes[attrName] = value;
                        } else {
                            allAttributesSelected = false;
                        }
                    }

                    // Reset and enable all options for selects after the current one
                    for (let i = currentIndex + 1; i < allSelects.length; i++) {
                        const select = allSelects[i];
                        select.value = '';
                        Array.from(select.options).forEach(option => {
                            if (option.value !== '') option.disabled = false;
                        });
                        allOptions[i].style.display = 'none';
                    }

                    // Show next attribute select if available
                    if (currentIndex < allOptions.length - 1 && this.value) {
                        const nextOption = allOptions[currentIndex + 1];
                        nextOption.style.display = 'block';
                        const nextSelect = nextOption.querySelector('select');
                        const nextAttrName = nextSelect.dataset.attribute;

                        // Tìm các giá trị hợp lệ cho dropdown tiếp theo dựa trên các thuộc tính đã chọn trước đó
                        const availableValues = new Set();
                        variantData.forEach(v => {
                            v.variants.forEach(variant => {
                                let match = true;
                                for (let j = 0; j <= currentIndex; j++) {
                                    const prevAttr = allSelects[j].dataset.attribute;
                                    const prevValue = allSelects[j].value;
                                    if (prevValue && variant[prevAttr] !== prevValue) {
                                        match = false;
                                        break;
                                    }
                                }
                                if (match) {
                                    availableValues.add(variant[nextAttrName]);
                                }
                            });
                        });

                        Array.from(nextSelect.options).forEach(option => {
                            if (option.value === '') return;
                            option.disabled = !availableValues.has(option.value);
                        });
                    }

                    // Nếu chưa chọn đủ thuộc tính, luôn hiển thị giá gốc
                    if (!allAttributesSelected) {
                        priceElement.innerHTML = `<strong>Base Price: $${basePrice}</strong>`;
                        if(cardPriceElement) cardPriceElement.innerHTML = `<strong>Base Price: $${basePrice}</strong>`;
                        detailsElement.style.display = 'none';
                        return;
                    }

                    // Find matching variant when all attributes are selected
                    const matchingVariant = variantData.find(v => {
                        return v.variants.some(variant =>
                            Object.entries(selectedAttributes).every(([key, value]) =>
                                variant[key] === value
                            )
                        );
                    });

                    if (matchingVariant) {
                        const matchingVariantInfo = matchingVariant.variants.find(variant =>
                            Object.entries(selectedAttributes).every(([key, value]) =>
                                variant[key] === value
                            )
                        );

                        if (matchingVariantInfo) {
                            priceElement.innerHTML = `<strong>Price: $${parseFloat(matchingVariantInfo.price).toFixed(2)}</strong>`;
                            if(cardPriceElement) cardPriceElement.innerHTML = `<strong>Price: $${parseFloat(matchingVariantInfo.price).toFixed(2)}</strong>`;

                            if (matchingVariantInfo.supplier || matchingVariantInfo.material) {
                                detailsElement.style.display = 'block';
                                detailsElement.querySelector('.supplier-info').textContent =
                                    matchingVariantInfo.supplier ? `Supplier: ${matchingVariantInfo.supplier}` : '';
                                detailsElement.querySelector('.material-info').textContent =
                                    matchingVariantInfo.material ? `Material: ${matchingVariantInfo.material}` : '';
                            } else {
                                detailsElement.style.display = 'none';
                            }
                        }
                    }
                });
            });

            // Khởi tạo trạng thái ban đầu cho từng modal sản phẩm
            document.querySelectorAll('[id^="variantModal-"]').forEach(modal => {
                const productId = modal.id.replace('variantModal-', '');
                const options = modal.querySelectorAll('.variant-option[data-product-id="' + productId + '"]');
                options.forEach((option, idx) => {
                    option.style.display = idx === 0 ? 'block' : 'none';
                });
            });

            // Khi đóng modal, reset lại giá ngoài card về base price
            document.querySelectorAll('.modal').forEach(modal => {
                modal.addEventListener('hidden.bs.modal', function(event) {
                    const productId = modal.id.replace('variantModal-', '');
                    const cardPriceElement = document.getElementById(`selected-price-card-${productId}`);
                    const basePrice = cardPriceElement ? cardPriceElement.dataset.basePrice : null;
                    if(cardPriceElement && basePrice) {
                        cardPriceElement.innerHTML = `<strong>Base Price: $${basePrice}</strong>`;
                    }
                });
            });
        });
    </script>
}